  lit entry
  call
  -1
buf: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
entry:
again:
  lit buf     ; buf
  lit getnext ; buf getnext
  call

  lit buf  ; buf
  load     ; c
  lit echo ; c echo
  jnz
  exit

echo:
  lit buf  ; buf
  lit puts ; buf puts
  call
  
  lit 10 ; \n
  write
  
  lit 1     ; 1
  lit again ; 1 again
  jnz

getnext:
loop1:
  read       ; buf c
  dup        ; buf c c
  lit 32     ; buf c c 32
  eq         ; buf c c==32
  lit space  ; buf c c==32 space
  jnz        ; buf c
!space:
  dup     ; buf c c
  lit 10  ; buf c c 10
  neq     ; buf c c!=10
  lit !nl ; buf c c!=10 !nl
  jnz     ; buf c
space:
nl:
  drop      ; buf
  lit 1     ; buf 1
  lit loop1 ; buf 1 loop1
  jnz
!nl:
loop2:
  over        ; buf c buf
  store       ; buf
  lit 1       ; buf 1
  add         ; buf+1
  read        ; buf' c
  dup         ; buf' c c
  lit 32      ; buf' c c 32
  eq          ; buf' c c==32
  lit space2  ; buf' c c==32 space2
  jnz         ; buf' c
!space2:
  dup      ; buf' c c
  lit 10   ; buf' c c 10
  eq       ; buf' c c==10
  lit nl2  ; buf' c c==10 nl2
  jnz      ; buf' c
!nl2:
  lit 1     ; buf' c 1
  lit loop2 ; buf' c 1 loop2
  jnz
space2:
nl2:
  drop  ; buf'
  lit 0 ; buf' 0
  swap  ; 0 buf'
  store
  exit

puts:
loop3:
  dup       ; buf buf 
  load      ; buf c
  dup       ; buf c c
  lit !null ; buf c c !null
  jnz       ; buf c
null:
  drop      ; buf
  drop
  exit
!null:
  write     ; buf
  lit 1     ; buf 1
  add       ; buf+1
  lit 1     ; buf' 1
  lit loop3 ; buf' 1 putsloop
  jnz
