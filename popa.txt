  cal entry
  hlt
buf: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
entry:
again:
  lad buf     ; bl bh
  cal getnext

  lad buf  ; bl bh
  fch      ; c
  bnz echo
  ret

echo:
  lad buf  ; bl bh
  cal puts
  
  lit 10    ; \n
  cal putc
  
  lit 1     ; 1
  bnz again ; 1

getnext:
loop1:
  cal getc   ; bl bh c
  dup        ; bl bh c c
  lit 32     ; bl bh c c 32
  sub        ; bl bh c c-32
  bnz space  ; bl bh c
!space:
  dup     ; bl bh c c
  lit 10  ; bl bh c c 10
  sub     ; bl bh c c-10
  bnz !nl ; bl bh c
space:
nl:
  drp      ; bl bh
  lit 1     ; bl bh 1
  bnz loop1
!nl:
loop2:
  lit 0       ; bl bh c 0
  psh         ; bl bh
  ovr         ; bl bh bl
  ovr         ; bl bh bl bh
  pop         ; bl bh bl bh c 0
  drp         ; bl bh bl bh c
  rot         ; bl bh bh c bl
  rot         ; bl bh c bl bh
  put         ; bl bh 
  lit 1       ; bl bh  1
  rot         ; bh 1 bl
  add         ; bh 1+bl
  ovr         ; bh bl' bh
  psh         ; bh
  drp
  pop         ; bl' bh
  cal getc    ; bl' bh c
  dup         ; bl' bh c c
  lit 32      ; bl' bh c c 32
  sub         ; bl' bh c c-32
  bnz space2  ; bl' bh c
!space2:
  dup      ; bl' bh c c
  lit 10   ; bl' bh c c 10
  sub      ; bl' bh c c-10
  bnz nl2  ; bl' bh c
!nl2:
  lit 1     ; bl' bh c 1
  bnz loop2 ; bl' bh c
space2:
nl2:
  drp   ; bl' bh
  lit 0 ; bl' bh 0
  rot   ; bh 0 bl'
  rot   ; 0 bl' bh
  put
  ret

puts:
loop3:
  ovr       ; bl bh bl
  ovr       ; bl bh bl bh
  fch       ; bl bh c
  dup       ; bl bh c c
  bnz !null ; bl bh c
null:
  drp      ; bl bh
  drp      ; bl
  drp
  ret
!null:
  cal putc  ; bl bh
  lit 1     ; bl bh 1
  rot       ; bh 1 bl
  add       ; bh 1+bl
  ovr       ; bh bl' bh
  psh       ; bh
  drp
  pop       ; bl' bh
  lit 1     ; bl' bh 1
  bnz loop3 ; bl' bh


PORT_IN= 65021
PORT_OUT= 65022
PORT_DATA= 65023


getc:
  lad PORT_IN ; PORT_IN
  fch         ; 0
  drp
  lad PORT_DATA ; PORT_DATA
  fch           ; c
  ret

putc:
  lad PORT_DATA ; c PORT_DATA
  put
  lad PORT_OUT ; PORT_OUT
  fch          ; 0
  drp
  ret
